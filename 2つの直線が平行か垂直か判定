import sys

def check_lines(p0, p1, p2, p3):
    dx1, dy1 = p1[0] - p0[0], p1[1] - p0[1]
    dx2, dy2 = p3[0] - p2[0], p3[1] - p2[1]

    # 線分が点になっている場合のチェック
    if (dx1 == 0 and dy1 == 0) or (dx2 == 0 and dy2 == 0):
        return -1  # 線分が存在しないことを示す

    # 外積を用いて平行かどうか判定
    cross_product = dx1 * dy2 - dy1 * dx2
    if cross_product == 0:
        return 2

    # 内積を用いて直交かどうか判定
    dot_product = dx1 * dx2 + dy1 * dy2
    if dot_product == 0:
        return 1

    # 平行でも直交でもない場合
    return 0

def main():
    try:
        data = sys.stdin.read().splitlines()
        q = int(data[0])

        # 入力がqと一致するか確認
        if len(data) != q + 1:
            print("入力の数が一致しません。")
            return

        results = []
        for i in range(1, q + 1):
            try:
                x0, y0, x1, y1, x2, y2, x3, y3 = map(int, data[i].split())
                p0, p1, p2, p3 = (x0, y0), (x1, y1), (x2, y2), (x3, y3)
                results.append(check_lines(p0, p1, p2, p3))
            except ValueError:
                print(f"入力が不正です: {data[i]}")
                return

        sys.stdout.write("\n".join(map(str, results)) + "\n")
    except ValueError:
        print("最初の行のクエリ数が整数ではありません。")

if __name__ == "__main__":
    main()
