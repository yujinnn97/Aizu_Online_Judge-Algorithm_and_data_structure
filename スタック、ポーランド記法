def evaluate_rpn(expression):
    stack = []
    tokens = expression.split()
    for token in tokens:
        # トークンが整数の場合 (正の数または負の数)
        if token.isdigit() or (token[0] == '-' and token[1:].isdigit()):
            stack.append(int(token))
        else:
            # トークンが演算子の場合、スタックから2つの要素を取り出して演算する
            b = stack.pop()
            a = stack.pop()

            if token == "+":
                result = a + b
            elif token == "-":
                result = a - b
            elif token == "*":
                result = a * b
            elif token == "/":
                result = int(a / b)  # 整数の除算として計算
            else:
                raise ValueError(f"Unsupported operator: {token}")

            # 結果をスタックにプッシュ
            stack.append(result)

    # 最終的にスタックには1つの結果が残る
    return stack[0]

# 入力を受け取り、計算結果を出力
if __name__ == "__main__":
    import sys
    input_expression = sys.stdin.read().strip()
    result = evaluate_rpn(input_expression)
    print(result)
